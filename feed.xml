<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://johnkongdev.github.io/</id><title>JohnKong's blog</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2022-01-29T03:26:00+09:00</updated> <author> <name>JohnKong</name> <uri>https://johnkongdev.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://johnkongdev.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://johnkongdev.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 JohnKong </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>StackFromEnd 가 의도와 다르게 동작했던 일</title><link href="https://johnkongdev.github.io/posts/recycler_view_with_stack_from_end/" rel="alternate" type="text/html" title="StackFromEnd 가 의도와 다르게 동작했던 일" /><published>2022-01-28T22:00:00+09:00</published> <updated>2022-01-28T22:00:00+09:00</updated> <id>https://johnkongdev.github.io/posts/recycler_view_with_stack_from_end/</id> <content src="https://johnkongdev.github.io/posts/recycler_view_with_stack_from_end/" /> <author> <name>JohnKong</name> </author> <category term="Android" /> <category term="View" /> <summary> 아래 조건을 만족하는 화면을 개발 중이었습니다. (우리가 흔히 쓰는 메신저 같은) 요구사항 0. 목록에는 메시지들이 있습니다. 1. 첫 진입시 가장 아래있는 (최근) 메시지부터 보여준다. (스크롤 최하단) 2. RecyclerView 에 아이템을 추가하면 아래로 쌓인다. 여기서 1번 요구사항을 만족하기 위해 우리는 보통 setStackFromEnd(true); 를 사용합니다. private void initRecyclerView() { final LinearLayoutManager linearLayoutManager = new LinearLayoutManager(context); linearLayoutManager.setStackFromEnd(true); binding.m... </summary> </entry> <entry><title>RxJava onErrorResumeNext</title><link href="https://johnkongdev.github.io/posts/on_error_resume_next/" rel="alternate" type="text/html" title="RxJava onErrorResumeNext" /><published>2022-01-23T19:00:00+09:00</published> <updated>2022-01-29T02:35:07+09:00</updated> <id>https://johnkongdev.github.io/posts/on_error_resume_next/</id> <content src="https://johnkongdev.github.io/posts/on_error_resume_next/" /> <author> <name>JohnKong</name> </author> <category term="Android" /> <category term="RxJava" /> <summary> onErrorResumeNext 을 사용하면서 겪은 일 아래와 같은 상황이 있었습니다. ChannelRepositoryImpl.java public class ChannelRepositoryImpl implements ChannelRepository { private final ChannelLocalDataSource local; private final ChannelRemoteDataSource remote; public Single&amp;lt;Channel&amp;gt; getChannel(String channelId) { return fetchChannel(channelId) .onErrorResumeNext(local.getChan... </summary> </entry> <entry><title>자주쓰는 ConstraintLayout 속성(2)</title><link href="https://johnkongdev.github.io/posts/constraint_layout_2/" rel="alternate" type="text/html" title="자주쓰는 ConstraintLayout 속성(2)" /><published>2022-01-17T19:00:00+09:00</published> <updated>2022-01-29T02:35:07+09:00</updated> <id>https://johnkongdev.github.io/posts/constraint_layout_2/</id> <content src="https://johnkongdev.github.io/posts/constraint_layout_2/" /> <author> <name>JohnKong</name> </author> <category term="Android" /> <category term="xml" /> <summary> ConstraintLayout 이전 포스트 내용을 말로 풀면 아래와 같습니다. 이름은 최대한 전부 다 표현해주고, 닉네임의 최소 너비(100dp)는 보장해준다. 이번에는 close 아이콘을 닉네임 옆에 붙어있도록 하는 방법을 알아봅니다. close 아이콘은 닉네임 옆에 붙어있으면서, 우측 끝에 닿으면 이름과 닉네임이 말줄임 표시가 되고, close 아이콘은 항상 보여아합니다. nickname 의 width 변경 지금은 width 의 남은 영역을 nickname 이 모두 가져가고 있습니다. close 아이콘을 nickname 바로 옆에 위치시키려면, 먼저 nickname 의 width 를 wrap_content 로 변경해줍니다. &amp;lt;androidx.constraintlayou... </summary> </entry> <entry><title>자주쓰는 ConstraintLayout 속성</title><link href="https://johnkongdev.github.io/posts/constraint_layout/" rel="alternate" type="text/html" title="자주쓰는 ConstraintLayout 속성" /><published>2022-01-17T09:00:00+09:00</published> <updated>2022-01-29T02:35:07+09:00</updated> <id>https://johnkongdev.github.io/posts/constraint_layout/</id> <content src="https://johnkongdev.github.io/posts/constraint_layout/" /> <author> <name>JohnKong</name> </author> <category term="Android" /> <category term="xml" /> <summary> ConstraintLayout 레거시한 코드가 아니라면 레이아웃 파일에 꼭 들어가는 ConstraintLayout. 일반적인 화면 구성에는 어려울 것 없지만, 간혹 복잡한 레이아웃(예를 들면, 가변 텍스트가 수평배치되는 등..)에서는 조금 더 잘 알고 쓰면, Layout depth 를 최대한 적게 유지할 수 있습니다. 이름, 별명, 아이콘이 수평 배치 이런 화면을 구성한다고 생각해봅시다. &amp;lt;TextView android:id="@+id/name" android:layout_width="0dp" android:layout_height="wrap_content" tools:text="홍길동" app:layout_constraintStart_toStartO... </summary> </entry> </feed>
